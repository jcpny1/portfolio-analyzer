{"version":3,"sources":["containers/ConfirmDialog.js","classes/Decimal.js","utils/formatter.js","components/Headlines.js","classes/Series.js","utils/request.js","containers/HeadlinesPage.js","components/Help.js","containers/HelpPage.js","utils/sort.js","classes/Portfolio.js","reducers/portfolioReducer.js","classes/Instrument.js","classes/DateTime.js","classes/Trade.js","classes/Position.js","reducers/userReducer.js","actions/fetchActions.js","actions/portfolioActions.js","classes/ChartData.js","components/PortfolioChart.js","containers/PortfolioChartPage.js","components/PortfolioEdit.js","containers/PortfolioEditPage.js","components/Portfolios.js","containers/PortfoliosPage.js","actions/positionActions.js","components/PositionEdit.js","containers/PositionEditPage.js","components/Positions.js","containers/PositionsPage.js","components/SettingsEdit.js","actions/userActions.js","containers/SettingsEditPage.js","components/Symbols.js","containers/SymbolsPage.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["ConfirmDialog","props","handleCancel","setState","open","handleConfirm","onClickConfirm","show","disabled","state","this","color","header","name","title","triggerType","Icon","id","link","onClick","Dropdown","Item","text","Confirm","cancelButton","confirmButton","closeOnDimmerClick","onCancel","onConfirm","Component","Decimal","value","type","delta","floatValue","Number","parseFloat","_value","Math","sign","_type","_delta","locale","useColor","stringValue","toString","style","formattedValue","toStringFormatted","options","currency","minimumFractionDigits","maximumFractionDigits","toLocaleString","testString","Intl","NumberFormat","format","groupChar","decimalChar","re","RegExp","replace","match","p1","p2","newP2","Fmt","serverError","prefix","error","dateStamp","DateTimeFormat","undefined","year","month","day","hour","minute","second","hour12","Date","now","errorString","status","exception","traces","trace","truncate","string","len","length","substr","valueColor","valueSign","Headlines","articles","djiaValue","djiaChange","refreshHeadlines","refreshTime","userLocale","Header","size","marginBottom","marginLeft","float","fontSize","as","toHTML","toLocaleTimeString","Button","content","icon","compact","inverted","paddingRight","Table","sortable","striped","marginTop","Body","map","article","index","Row","Cell","className","href","url","description","target","rel","fontWeight","Series","instrumentSearch","params","cb","exact","symbol","encodeURIComponent","fetch","headers","then","statusCheck","response","json","catch","alert","message","instrumentsRefresh","pricesRefresh","seriesRefresh","seriesType","ETF_SYMBOLS","seriesRefreshActive","seriesRefreshAll","Error","statusText","console","log","HeadlinesPage","headlines","forEach","headlinesArticle","refreshDJIA","price","change_value","change","split","refreshIndexes","indices","djia","data","find","indice","attributes","instrument","headlinesIntervalId","indexesIntervalId","window","setInterval","HEADLINES_REFRESH_INTERVAL","INDEXES_REFRESH_INTERVAL","clearInterval","connect","users","user","Help","HelpPage","Modal","trigger","closeIcon","Content","Actions","columnSorter","initialPrimaryProperty","initialPrimaryDirection","initialSecondaryProperty","initialSecondaryDirection","lastPrimaryProperty","lastSecondaryProperty","lastPrimaryReverseSort","lastSecondaryReverseSort","objectArray","sortFn","primaryProperty","secondaryProperty","primary","property","direction","secondary","sortBy","field","reverse","compareFn","key","x","a","b","A","B","reverseSort","valueOf","sortByNumber","sortByOther","isFinite","Portfolio","_id","_name","_positions","updateDerivedValues","_gainLoss","serverTrades","position","reprice","sumCost","sumDayChange","sumGainLoss","sumMarketValue","cost","dayChange","gainLoss","marketValue","_cost","_dayChange","_marketValue","portfolios","portfolio","portfolioProperty","portfolioReverseSort","positionProperty","positionReverseSort","sort","Sort","toUpperCase","positions","portfolioAction","errorPortfolio","payload","updateAllPortfolio","updatingPortfolio","Instrument","_symbol","DateTime","timestamp","parse","isNaN","toISOString","substring","dateFormat","DATE_OPTIONS","Trade","instrumentId","priceChange","tradeDate","lastUpdate","_instrumentId","_lastUpdate","_price","_priceChange","_tradeDate","Position","portfolioId","quantity","dateAcquired","_portfolio_id","_dateAcquired","_instrument","_quantity","_trade","serverTrade","lastTrade","_pctTotalMV","pctTotalMV","errorReturn","test","Request","instruments","userAction","updateUser","updatingUser","portfolioAdd","dispatch","method","body","JSON","stringify","loadedPortfolio","PortfolioReducer","portfolioDelete","deletedPortfolio","portfolioUpdate","updatedPortfolio","portfoliosLoad","loadLivePrices","serverPortfolios","serverPortfolio","included","relation","push","positionId","relationships","serverPosition","trades","trade","warning","applyPrices","userFetch","userId","UserReducer","FetchAction","portfoliosSort","ChartData","series","portfolioName","portfolioSymbolIds","chartData","seriesInstrument","latestStartDate","latestSeriesStartDate","seriesInstrumentDataPoint","plotPoint","convertToPlotPoint","addPortfolioSummary","shortestSeries","MAX_SAFE_INTEGER","Object","values","symbolSeries","symbolCount","portfolioSymbolId","dataPoint","i","chartDataInstrument","closePrice","sharesHeld","currentInstrumentId","seriesInstrumentId","dataPointStartDate","plotOptions","withHighcharts","refData","HighchartsChart","Chart","Title","Legend","Tooltip","shared","useHTML","valueDecimals","headerFormat","pointFormat","footerFormat","XAxis","crosshair","YAxis","labels","marker","enabled","visible","Highcharts","PortfolioChartPage","refreshData","portfolioSymbols","symbols","Set","concat","join","dateNow","start_date","end_date","getFullYear","CHART_RANGE","getMonth","getDate","toJSON","seriesDataToChartData","resetComponent","modalOpen","handleOpen","iconColor","iconName","tooltip","onClose","paddingBottom","nameToHTML","floated","actions","bindActionCreators","portfolioActions","PortfolioEdit","onChange","onSubmit","Form","Group","Input","width","label","placeholder","autoFocus","required","PortfolioEditPage","editedPortfolio","handleChange","e","newPortfolio","_cloneDeep","handleSubmit","form","Portfolios","onClickColHeader","onClickRemove","refreshPortfolios","sortColName","sortDirection","totalCost","totalDayChange","totalGainLoss","totalMarketValue","loading","textAlign","HeaderCell","sorted","to","Footer","PortfoliosPage","removePortfolio","deleteFn","sortPortfolios","columnName","accountSummary","sortTerms","positionAdd","portfolio_id","instrument_symbol","date_acquired","toForm","positionDelete","positionsSort","positionUpdate","PositionEdit","formError","keys","Message","hidden","PositionEditPage","editedPosition","stringPosition","newValue","validateStringInput","positionActions","Positions","totalMV","portfolioRefresh","symbolToHTML","lastTradeDate","PositionsPage","positionRemove","onClickSubmit","positionSubmit","SettingsEdit","Select","userLoad","userUpdate","updatedUser","SettingsEditPage","editedUser","Menu","userActions","Symbols","serverInstruments","searchValue","Grid","Column","serverInstrument","SymbolsPage","searchResults","slice","DISPLAY_ROWS_MAX","App","item","Divider","Link","columns","path","component","paddingLeft","pageFooterRow","stretched","Image","src","pageMenuLeft","pageMenuCenter","pageMenuRight","lineHeight","marginRight","padding","menuItemAdmin","menuItemHelp","padded","stackable","pageHeader","pageMenu","pageBody","pageFooter","WrapperApp","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","action","returnObject","payloadPortfolio","assign","payloadPortfolioId","portfolioIndex","findIndex","payloadPortfolios","payloadUser","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6bcda5b4.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Confirm, Dropdown, Icon} from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\n\nexport default class ConfirmDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  }\n\n  handleConfirm = () => {\n    this.setState({ open: false });\n    this.props.onClickConfirm();\n  }\n\n  show = () => {\n    const {disabled} = this.props;\n    !disabled && this.setState({ open: true });\n  }\n\n  render() {\n    const {color, disabled, header, name, title, triggerType} = this.props;\n    const {open} = this.state;\n    return (\n      <span>\n        {\n          (triggerType === 'icon') ?\n            <Icon name={name} title={title} id='portfolioDelete' link color={color} onClick={this.show}/> :\n            <Dropdown.Item disabled={disabled} text={title} onClick={this.show}/>\n        }\n        <Confirm\n          cancelButton='NO'\n          confirmButton='YES'\n          closeOnDimmerClick={false}\n          header={header}\n          open={open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    );\n  }\n}\n\nConfirmDialog.propTypes = {\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  header: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  onClickConfirm: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  triggerType: PropTypes.string.isRequired,\n}\n","import React from 'react';\n\n// This class is used to hold and format numeric values.\nexport default class Decimal {\n  // Value can be a string or a number.\n  // Valid types are currency, decimal, index, percent, and quantity.\n  // Specifying delta will affect the color of the displayed value.\n  constructor(value = '', type = 'decimal', delta = '') {\n    const floatValue = Number.parseFloat(value);\n    this._value = (Math.sign(floatValue) === -0.0) ? +0.0 : floatValue;  // We don't need or want -0 values.\n    this._type  = type;\n    this._delta = delta;\n  }\n\n  valueOf() {return this._value}\n\n  // Convert a locale-style decimal string to the en-US allowed by javascript.\n  //   Remove thousands group character. Swap out decimal character.\n  //   Some of this logic can be replaced with Intl.NumberFormat.prototype.formatToParts(number), when it becomes available.\n  static fromLocale(stringValue, locale) {\n    const testString = new Intl.NumberFormat(locale).format(1000.1); // => e.g. '1.000,1'\n    const groupChar   = testString[1];\n    const decimalChar = testString[5]\n    const re = new RegExp(`(d+)([${groupChar}${decimalChar}])`, 'g');\n    return stringValue.replace(re, function(match, p1, p2) {\n      const newP2 = (p2 === groupChar) ? '' : (p2 === decimalChar) ? '.' : p2;\n      return `${p1}${newP2}`\n    });\n  }\n\n  // Returns the formatted value string with HTML code.\n  toHTML(locale, useColor = '' ) {\n    const stringValue = this.toString(locale)\n    let color = 'black';\n    let sign  = '';\n    if (useColor) {\n      color = useColor;\n    } else if (this._value < 0.0) {\n      color = 'red';  // Note: formatted negative numbers already have a sign.\n    } else if (this._value > 0.0 && this._delta) {\n      color = 'green';\n      sign  = '+';\n    }\n    return (<span style={{color:color}}>{sign}{stringValue}</span>);\n  }\n\n  // Returns a formatted value string.\n  toString(locale) {\n    let formattedValue = '';\n    if (this._value) {\n      if (locale) {\n        formattedValue = this.toStringFormatted(locale);\n      } else {\n        formattedValue = this._value.toString();\n      }\n    }\n    return formattedValue;\n  }\n\n  toStringFormatted(locale) {\n    const options = {};\n    switch (this._type) {\n      case 'currency':\n        options.style ='currency';\n        options.currency = 'USD';\n        options.minimumFractionDigits = 2;\n        options.maximumFractionDigits = 3;\n        break;\n      case 'decimal':\n        options.minimumFractionDigits = 2;\n        options.maximumFractionDigits = 3;\n        break;\n      case 'index':\n        options.minimumFractionDigits = 0;\n        options.maximumFractionDigits = 2;\n        break;\n      case 'percent':\n        options.style ='percent';\n        options.minimumFractionDigits = 0;\n        options.maximumFractionDigits = 2;\n        break;\n      case 'quantity':\n        options.minimumFractionDigits = 0;\n        options.maximumFractionDigits = 5;\n        break;\n      default:\n        break;\n    }\n    return this._value.toLocaleString(locale, options);\n  }\n}\n","// Returns a formatted server error string.\nconst serverError = (prefix, error) => {\n  const dateOptions = { year: 'numeric', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n  const dateStamp   = new Intl.DateTimeFormat(undefined, dateOptions).format(Date.now());\n  const errorString = (error.status === 400 || error.status === 500) ?\n      `${prefix}: status: ${error.status} error: ${error.error}: ${error.exception} @ ${error.traces['Application Trace'][0].trace}` :\n      `${prefix}: ${error}`;\n  return `${errorString}\\n\\n\\n${dateStamp}`;\n};\n\n// If string is longer than length len, truncate it and add an ellipsis.\nconst truncate = (string, len) => {\n  return (string.length > len) ? string.substr(0, len-1) + '...' : string;\n}\n\n// Return color based on value.\nconst valueColor = (value) => {\n  let color = 'black';\n  const valueSign = Math.sign(Number.parseFloat(value));\n  if (valueSign === 1) {\n    color = 'green';\n  } else if (valueSign === -1) {\n    color = 'red';\n  }\n  return color;\n}\n\nconst Fmt = {serverError, truncate, valueColor};\nexport default Fmt;\n","import React from 'react';\nimport {Button, Header, Table} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport const Headlines = (props) => {\n  const {articles, djiaValue, djiaChange, refreshHeadlines, refreshTime, userLocale} = props;\n\n  function listHeadlines() {\n    if (articles) {\n      return articles.map((article,index) => {\n        return (\n          <Table.Row key={index}>\n            <Table.Cell>\n              <a className='news' href={article.url} title={article.description} target='_blank' rel='noopener noreferrer'><span style={{fontWeight:article.fontWeight}}>{article.title}.</span></a>\n            </Table.Cell>\n          </Table.Row>\n        );\n      });\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <span>\n      <Header size='medium' color='purple' style={{marginBottom:0, marginLeft:'3px'}}>\n        Headline News\n        <span disabled style={{float:'right', fontSize:'70%'}}>\n          <Header as='span' title='Dow Jones Industrial Average' size='tiny' color='purple'>\n            DJIA&nbsp;&nbsp;{djiaValue.toHTML(userLocale, 'purple')}&nbsp;&nbsp;{djiaChange.toHTML(userLocale)}\n          </Header>\n          &emsp;&emsp;&emsp;\n          <Header as='span' title='Last index refresh time' size='tiny' color='purple'>\n            Time&nbsp;&nbsp;{refreshTime.toLocaleTimeString(userLocale)}\n          </Header>\n          &emsp;&emsp;&emsp;\n          <Button disabled content='Refresh: Auto' icon='refresh' title='Refresh headlines' compact inverted size='tiny' style={{paddingRight:'3px', color:'purple'}} onClick={() => refreshHeadlines()}/>\n        </span>\n      </Header>\n      <Table compact sortable striped style={{marginTop:0}}>\n        <Table.Body>{listHeadlines()}</Table.Body>\n        </Table>\n    </span>\n  );\n}\n\nHeadlines.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  djiaValue: PropTypes.object.isRequired,\n  djiaChange: PropTypes.object.isRequired,\n  refreshHeadlines: PropTypes.func.isRequired,\n  refreshTime: PropTypes.instanceOf(Date).isRequired,\n  userLocale: PropTypes.string.isRequired,\n}\n","export default class Series {\n  static ETF_SYMBOLS = ['URTH','IWM','QQQ','DIA','SPY'];\n}\n","import 'isomorphic-fetch';\nimport Fmt from '../utils/formatter';\nimport Series from '../classes/Series';\n\n// Request the server to refresh the symbololgy database.\nexport function headlinesRefresh(cb) {\n  fetch('/api/headlines', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(cb)\n  .catch(error => {alert(Fmt.serverError('Refresh Headlines', error));});\n}\n\n// Request the server to refresh market indexes.\nexport function djiaRefresh(cb) {\n  fetch('/api/last-djia', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(cb)\n  .catch(error => {alert(Fmt.serverError('Refresh Indexes', error));});\n}\n\n// Request the server to refresh market indexes.\nexport function indexesRefresh(cb) {\n  fetch('/api/last-index?symbols=DJIA', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(cb)\n  .catch(error => {alert(Fmt.serverError('Refresh Indexes', error));});\n}\n\n// Lookup instrument by value.\n//   params={field, value, exact}\n//   Specify option 'exact' as true (for an exact match) or false (for a partial match).\nexport function instrumentSearch(params, cb) {\n  const exact  = params.exact ? '&exact' : '';\n  const symbol = encodeURIComponent(params.value);\n  return fetch(`/api/instruments?v=${symbol}${exact}`, {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(cb)\n  .catch(error => {alert(error.message)});\n}\n\n// Request the server to refresh the symbololgy database.\nexport function instrumentsRefresh() {\n  fetch('/api/instruments/refresh', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .catch(error => {alert(Fmt.serverError('Refresh Symbols', error));});\n}\n\n// Request the server to refresh trade prices.\nexport function pricesRefresh() {\n  fetch('/api/trades/refresh', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .catch(error => {alert(Fmt.serverError('Refresh Prices', error));});\n}\n\n// Get series data for given symbols.\nexport function seriesFetch(symbols, start_date, end_date, cb) {\n  fetch(`/api/monthly-series?symbols=${symbols}&start_date=${start_date}&end_date=${end_date}`, {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(cb)\n  .catch(error => {alert(Fmt.serverError('Refresh Series', error));});\n}\n\n// Request the server to refresh series prices.\nexport function seriesRefresh(seriesType) {\n  fetch(`/api/series/refresh?instruments=${seriesType}&symbols=${Series.ETF_SYMBOLS}`, {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .catch(error => {alert(Fmt.serverError('Refresh Prices', error));});\n}\n\n// Request the server to update series prices only for instruments held by Users.\nexport function seriesRefreshActive() {\n  seriesRefresh('active');\n}\n\n// Request the server to update series prices for all instruments in Instruments table.\nexport function seriesRefreshAll() {\n  seriesRefresh('all');\n}\n\n// Check a fetch response status.\nexport function statusCheck(response) {\n  if (response.status < 200 || response.status >= 300) {\n    const error = new Error(`HTTP Error ${response.statusText}`);\n    error.status = response.status;\n    error.response = response;\n    console.log(error);\n  }\n  return response;\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Decimal from '../classes/Decimal';\nimport Fmt from '../utils/formatter';\nimport {Headlines} from '../components/Headlines';\nimport * as Request from '../utils/request';\n\nclass HeadlinesPage extends Component {\n\n  static HEADLINES_REFRESH_INTERVAL = 300 * 1000;  // in milliseconds.\n  static INDEXES_REFRESH_INTERVAL   =  60 * 1000;  // in milliseconds.\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      djiaValue:  new Decimal(0.0, 'index'),\n      djiaChange: new Decimal(0.0, 'index', 'delta'),\n      headlinesIntervalId: -1,\n      indexesIntervalId: -1,\n      refreshTime: new Date(),\n    }\n  }\n\n  componentDidMount() {\n    this.refreshHeadlines();\n    this.setState({headlinesIntervalId: window.setInterval(this.refreshHeadlines, HeadlinesPage.HEADLINES_REFRESH_INTERVAL)});\n    this.refreshDJIA();\n    this.setState({indexesIntervalId: window.setInterval(this.refreshDJIA, HeadlinesPage.INDEXES_REFRESH_INTERVAL)});\n  }\n\n  componentWillUnmount(){\n    window.clearInterval(this.state.headlinesIntervalId);\n    window.clearInterval(this.state.indexesIntervalId);\n  }\n\n  refreshHeadlines = () => {\n    Request.headlinesRefresh(headlines => {\n      if (headlines.status === 'error') {\n        alert(Fmt.serverError('Refresh Headlines', headlines.message));\n      } else {\n        headlines.articles.forEach((headlinesArticle,index) => {\n          if ((index > this.state.articles.length-1) || (headlinesArticle.title !== this.state.articles[index].title)) {\n            headlinesArticle.fontWeight = 'bold';\n          } else {\n            headlinesArticle.fontWeight = 'normal';\n          }\n        });\n        this.setState({articles: headlines.articles});\n      }\n    });\n  }\n\n  refreshDJIA = () => {\n    Request.djiaRefresh(index => {\n      if ('error' in index) {\n        alert(Fmt.serverError('Refresh DJIA', index.error));\n      } else {\n        const price = index.price.replace(/\\,/g,'');\n        const change = index.change.split(' ');\n        const change_value = change[0].replace(/\\,/g,'');\n        // const change_percent = change[1].replace(/\\,/g,'');\n        this.setState({djiaValue: new Decimal(price, 'index'), djiaChange: new Decimal(change_value, 'index', 'delta'), refreshTime: new Date()});\n      }\n    });\n  }\n\n  refreshIndexes = () => {\n    Request.indexesRefresh(indices => {\n      if ('error' in indices) {\n        alert(Fmt.serverError('Refresh Indexes', indices.error));\n      } else {\n        const djia = indices.data.find(indice => indice.attributes.instrument.symbol === 'DJIA');\n        if (djia) {\n          this.setState({djiaValue: new Decimal(djia.attributes['trade-price'], 'index'), djiaChange: new Decimal(djia.attributes['price-change'], 'index', 'delta'), refreshTime: new Date()});\n        }\n      }\n    });\n  }\n\n  render() {\n    const {userLocale} = this.props;\n    return (<Headlines articles={this.state.articles} djiaValue={this.state.djiaValue} djiaChange={this.state.djiaChange} refreshTime={this.state.refreshTime} refreshHeadlines={this.refreshHeadlines} userLocale={userLocale}/>);\n  }\n}\n\nHeadlinesPage.propTypes = {\n  userLocale: PropTypes.string.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {userLocale: state.users.user.locale};\n}\n\nexport default connect(mapStateToProps)(HeadlinesPage);\n","import React from 'react';\n\nexport const Help = () => {\n  return (\n    <div>\n      <h3>No Investment Advice or Recommendations</h3>\n      <ul>\n        <li>The content of the Portfolio Analyzer app is for educational and entertainment purposes only.</li>\n        <li>Any information contained herein should be verfied through other sources.</li>\n        <li>No decisions should be based on this app.</li>\n      </ul>\n      <h3>No Security</h3>\n      <ul>\n        <li>The application is currently configured such that all users share the same public account.</li>\n        <li>Any data you enter is viewable and changeable by any other user at any time.</li>\n      </ul>\n      <h3>Market Data</h3>\n      <ul>\n        <li>Latest trade data provided for free by <a href='https://iexcloud.io' target='_blank' rel='noopener noreferrer'>IEX</a>. <a href='https://iextrading.com/api-terms/' target='_blank' rel='noopener noreferrer'>(IEX Terms Of Service)</a></li>\n        <li>The Dow Jones Industrial Average is provided by <a href='https://finance.yahoo.com/' target='_blank' rel='noopener noreferrer'>Yahoo Finance</a>.</li>\n        <li>Note that the prices shown may not be the correct prices nor the latest prices.</li>\n        <li>Any prices displayed should be verfied through other sources.</li>\n        <li>\n          When the application is first opened, the prices displayed are from the last time someone refreshed a portfolio containing those same symbols.\n          Pressing refresh will update those prices with the latest available prices.\n        </li>\n        <li>Day change values are calculated based on the previous close price, not the current open price.</li>\n      </ul>\n      <h3>Portfolio Charts</h3>\n      <ul>\n        <li>Monthly adjusted historical series data is provided by <a href='https://www.alphavantage.co' target='_blank' rel='noopener noreferrer'>Alpha Vantage</a>.</li>\n        <li>The chart start date will be the earliest date where all portfolio instruments have data (to a maximum of 5 years ago).</li>\n        <li>For a more accurate performance comparison, the comparison instruments displayed on the chart are index ETFs, and not the indices themselves (e.g. DIA, not DJIA).</li>\n      </ul>\n      <h3>Headline News</h3>\n      <ul>\n        <li>Headline News is provided by <a href='https://newsapi.org' target='_blank' rel='noopener noreferrer'>NewsAPI.org</a>.</li>\n        <li>Headlines are set to refresh every 5 minutes.</li>\n        <li>The DJIA index is set to refresh every 1 minute.</li>\n      </ul>\n      <h3>Symbol Lookup</h3>\n      <ul>\n      <li>Uses <a href='https://iextrading.com/trading/eligible-symbols/' target='_blank' rel='noopener noreferrer'>IEX symbology</a>.</li>\n      <li>Accepts the wildcard character '%'.</li>\n      </ul>\n      <h3>Known issues:</h3>\n      <ul>\n        <li>Chart data is not available for every instrument.</li>\n        <li>\n          To avoid exceeding vendor call rate limits, series data will only be updated when saved series data does not already contain the last saved trade's date and price.\n          In other words, to update a series, the latest stored trade must be different than what has already been saved in the series.\n          Therefore, a price refresh should be done before updating series data.\n        </li>\n        <li>Series data provided by the feed vendor may or may not include the latest trading day.</li>\n        <li>Due to license restrictions, Headline News may post an error popup if the daily request limit is reached.</li>\n        <li>Some server errors will display popups for debugging purposes. This is expected since this is a development environment.</li>\n      </ul>\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport {Header, Modal} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport {Help} from '../components/Help';\n\nexport default class HelpPage extends Component {\n  render() {\n    return (\n      <Modal trigger={this.props.trigger} closeIcon='close'>\n        <Modal.Header><Header content='Notes' icon='info circle' size='small'/></Modal.Header>\n        <Modal.Content><Help/></Modal.Content>\n        <Modal.Actions></Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nHelpPage.propTypes = {\n  trigger: PropTypes.object.isRequired,\n}\n","// Manage the sort status of an object array's properties.\n// Calling with no arguments, returns current sorting info.\nexport function columnSorter(initialPrimaryProperty, initialPrimaryDirection, initialSecondaryProperty, initialSecondaryDirection) {\n  let lastPrimaryProperty    = initialPrimaryProperty;     // which property was last sorted.\n  let lastPrimaryDirection   = initialPrimaryDirection;\n  let lastSecondaryProperty  = initialSecondaryProperty;   // which property was last sorted.\n  let lastSecondaryDirection = initialSecondaryDirection;\n  let lastPrimaryReverseSort   = (lastPrimaryDirection   === 'ascending') ? false : true;   // convert asc|desc to false|true.\n  let lastSecondaryReverseSort = (lastSecondaryDirection === 'ascending') ? false : true;   // convert asc|desc to false|true.\n  return function(objectArray, sortFn, primaryProperty, secondaryProperty) {\n    if (typeof objectArray === 'undefined') {\n      let lastPrimaryDirection   = lastPrimaryReverseSort   ? 'descending' : 'ascending';\n      let lastSecondaryDirection = lastSecondaryReverseSort ? 'descending' : 'ascending';\n      return {primary: {property: lastPrimaryProperty, direction: lastPrimaryDirection}, secondary: {property: lastSecondaryProperty, direction: lastSecondaryDirection}};\n    }\n    if (primaryProperty) {\n      lastPrimaryReverseSort = (lastPrimaryProperty === primaryProperty) ? !lastPrimaryReverseSort : false;\n      lastPrimaryProperty    = primaryProperty;\n    }\n    if (secondaryProperty) {\n      lastSecondaryReverseSort = (lastSecondaryProperty === secondaryProperty) ? !lastSecondaryReverseSort : false;\n      lastSecondaryProperty    = secondaryProperty;\n    }\n    sortFn(objectArray, lastPrimaryProperty, lastPrimaryReverseSort, lastSecondaryProperty, lastSecondaryReverseSort);\n  }\n}\n\n// A generic sort comparator function.\nexport const sortBy = function(field, reverse = false, compareFn) {\n  const key = function (x) {\n    return compareFn ? compareFn(x[field]) : x[field]\n  };\n  return function (a,b) {\n    const A = key(a), B = key(b), reverseSort = [1,-1][+!!reverse];\n    if ((typeof A.valueOf() === 'number') && (typeof B.valueOf() === 'number')) {\n      return sortByNumber(A, B, reverseSort);\n    }\n    return sortByOther(A, B, reverseSort);\n  }\n}\n\n// Sort two numbers.\n//   (considers nulls and NaN's to be less than not nulls and NaN's).\nfunction sortByNumber(A, B, reverseSort) {\n  if (!isFinite(A) || !isFinite(B)) {  // Special cases\n    if (!isFinite(A) && !isFinite(B)) {\n      return 0;\n    } else if (!isFinite(A) && isFinite(B)) {\n      return -1 * reverseSort;\n    } else if (isFinite(A) && !isFinite(B)) {\n      return 1 * reverseSort;\n    }\n  }\n  return ( (A < B) ? -1 : ( (A > B) ? 1 : 0 ) ) * reverseSort;\n}\n\n// Sort two non-numbers.\n//   (considers nulls and NaN's to be less than not nulls and NaN's).\nfunction sortByOther(A, B, reverseSort) {\n  if (!A || !B) {  // Special cases\n    if (!A && !B) {\n      return 0;\n    } else if (!A && B) {\n      return -1 * reverseSort;\n    } else if (A && !B) {\n      return 1 * reverseSort;\n    }\n  }\n  return ( (A < B) ? -1 : ( (A > B) ? 1 : 0 ) ) * reverseSort;\n}\n","import React from 'react';\nimport Fmt from '../utils/formatter';\nimport * as Sort from '../utils/sort';\nimport Decimal from '../classes/Decimal';\n\nexport default class Portfolio {\n  constructor(id = '', name = '') {\n    // persisted\n    this._id   = id;\n    this._name = name;\n    // populated from position data\n    this._positions = [];\n    // derived\n    this.updateDerivedValues();\n  }\n\n  get id()          {return this._id}\n  get cost()        {return this._cost}\n  get dayChange()   {return this._dayChange}\n  get gainLoss()    {return this._gainLoss}\n  get marketValue() {return this._marketValue}\n  get name()        {return this._name}\n  get positions()   {return this._positions}\n\n  set name(name) {this._name = name}\n\n  // Return summary values for the given portoflios.\n  static accountSummary(portfolios) {\n    let sumCost = 0.0, sumDayChange = 0.0, sumGainLoss = 0.0, sumMarketValue = 0.0;\n    portfolios.forEach(portfolio => {\n      sumCost        += portfolio.cost;\n      sumDayChange   += portfolio.dayChange;\n      sumGainLoss    += portfolio.gainLoss;\n      sumMarketValue += portfolio.marketValue;\n    });\n    sumCost = new Decimal(sumCost, 'currency');\n    sumDayChange = new Decimal(sumDayChange, 'currency', 'delta');\n    sumGainLoss = new Decimal(sumGainLoss, 'currency', 'delta');\n    sumMarketValue = new Decimal(sumMarketValue, 'currency');\n    return ({sumCost, sumDayChange, sumGainLoss, sumMarketValue});\n  }\n\n  // Update portfolios with the given trade prices.\n  static applyPrices(portfolios, serverTrades) {\n    portfolios.forEach(portfolio => {\n      portfolio.reprice(serverTrades);\n      portfolio.updateDerivedValues();\n    });\n  }\n\n  // Returns the portfolio name string with HTML code.\n  // Specify gainLoss number to determine color.\n  nameToHTML() {\n    const color = Fmt.valueColor(this._gainLoss);\n    return (<span style={{color:color}}>{this._name}</span>);\n  }\n\n  reprice(serverTrades) {\n    this._positions.forEach(position => {\n      position.reprice(serverTrades);\n    });\n  }\n\n  // Sort Portfolios according to supplied arguments.\n  static sort(portfolios, portfolioProperty, portfolioReverseSort, positionProperty, positionReverseSort) {\n    // TODO: put column => handler list somewhere where it will not be forgotten when a new column is added.\n\n    // Sort portfolios.\n    switch (portfolioProperty) {\n      case 'name':\n        portfolios.sort(Sort.sortBy(`${portfolioProperty}`, portfolioReverseSort, function(a){return a.toUpperCase()}));\n        break;\n      default:\n        portfolios.sort(Sort.sortBy(`${portfolioProperty}`, portfolioReverseSort));\n        break;\n    }\n\n    // Sort positions within portfolios.\n    portfolios.forEach(portfolio => {\n      switch (positionProperty) {\n        case 'symbol':\n          portfolio._positions.sort(Sort.sortBy('instrument', positionReverseSort, function(a){return a.symbol}));\n          break;\n        default:\n          portfolio.positions.sort(Sort.sortBy(`${positionProperty}`, positionReverseSort, function(a){return a.valueOf()}));\n          break;\n      }\n    });\n  }\n\n  // Recompute portfolio summary info.\n  updateDerivedValues() {\n    let sumCost = 0.0, sumDayChange = 0.0, sumGainLoss = 0.0, sumMarketValue = 0.0;\n    this._positions.forEach(position => {\n      sumCost        += position.cost;\n      sumDayChange   += position.dayChange;\n      sumGainLoss    += position.gainLoss;\n      sumMarketValue += position.marketValue;\n    });\n    this._cost        = new Decimal(sumCost,        'currency');\n    this._dayChange   = new Decimal(sumDayChange,   'currency', 'delta');\n    this._gainLoss    = new Decimal(sumGainLoss,    'currency', 'delta');\n    this._marketValue = new Decimal(sumMarketValue, 'currency');\n  }\n}\n","import Fmt from '../utils/formatter';\nimport * as Sort from '../utils/sort';\n\nconst portfolioAction = {\n  ADD       : 'PORTFOLIO_ADD',\n  DELETE    : 'PORTFOLIO_DELETE',\n  ERROR     : 'PORTFOLIOS_ERROR',\n  UPDATE    : 'PORTFOLIO_UPDATE',\n  UPDATE_ALL: 'PORTFOLIOS_UPDATE',\n  UPDATING  : 'PORTFOLIO_UPDATING',\n  WARN      : 'PORTFOLIOS_WARN',\n};\n\nexport function addPortfolio(portfolio)        {return {type: portfolioAction.ADD,        payload: portfolio}}\nexport function deletePortfolio(portfolioId)   {return {type: portfolioAction.DELETE,     payload: portfolioId}}\nexport function errorPortfolio(error)          {return {type: portfolioAction.ERROR,      payload: error}}\nexport function updatePortfolio(portfolio)     {return {type: portfolioAction.UPDATE,     payload: portfolio}}\nexport function updateAllPortfolio(portfolios) {return {type: portfolioAction.UPDATE_ALL, payload: portfolios}}\nexport function updatingPortfolio()            {return {type: portfolioAction.UPDATING}}\nexport function warnPortfolio(warning)         {return {type: portfolioAction.WARN,       payload: warning}}\n\nexport function portfolioReducer(state = {updatingPortfolio: false, portfolios: [], sortFn: Sort.columnSorter('name', 'ascending', 'symbol', 'ascending')}, action) {\n  let returnObject = null;\n  switch (action.type) {\n    // Add a Portfolio.\n    case portfolioAction.ADD: {\n      const payloadPortfolio = action.payload;\n      const portfolios = [payloadPortfolio, ...state.portfolios];\n      returnObject = Object.assign({}, state, {updatingPortfolio: false, portfolios: portfolios});\n      break;\n    }\n    // Delete a Portfolio.\n    case portfolioAction.DELETE: {\n      const payloadPortfolioId = action.payload;\n      const portfolioIndex = state.portfolios.findIndex(portfolio => {return portfolio.id === payloadPortfolioId;});\n      const portfolios = [...state.portfolios.slice(0,portfolioIndex), ...state.portfolios.slice(portfolioIndex+1)]\n      returnObject = Object.assign({}, state, {updatingPortfolio: false, portfolios: portfolios});\n      break;\n    }\n    // Error on Portfolio action.\n    case portfolioAction.ERROR: {\n      const {prefix, error} = action.payload;\n      alert(Fmt.serverError(prefix, error));\n      returnObject = Object.assign({}, state, {updatingPortfolio: false});\n      break;\n    }\n    // Update one Portfolio.\n    case portfolioAction.UPDATE: {\n      const payloadPortfolio = action.payload;\n      const portfolioIndex = state.portfolios.findIndex(portfolio => {return portfolio.id === payloadPortfolio.id});\n      const portfolios = [...state.portfolios.slice(0,portfolioIndex), payloadPortfolio, ...state.portfolios.slice(portfolioIndex+1)];\n      returnObject = Object.assign({}, state, {updatingPortfolio: false, portfolios: portfolios});\n      break;\n    }\n    // Update all Portfolios.\n    case portfolioAction.UPDATE_ALL: {\n      const payloadPortfolios = action.payload;\n      returnObject = Object.assign({}, state, {updatingPortfolio: false, portfolios: payloadPortfolios});\n      break;\n    }\n    // Show that one or more Portfolios are being modified.\n    case portfolioAction.UPDATING:\n      returnObject = Object.assign({}, state, {updatingPortfolio: true});\n      break;\n    // Warning on Portfolio action.\n    case portfolioAction.WARN: {\n      const {prefix, warning} = action.payload;\n      alert(Fmt.serverError(prefix, warning));\n      returnObject = state;\n      break;\n    }\n    // Default action.\n    default:\n      returnObject = state;\n      break;\n  }\n  return returnObject;\n}\n","import React from 'react';\nimport Fmt from '../utils/formatter';\n\n// This class describes Instrument objects.\nexport default class Instrument {\n  constructor(id = '', symbol = '', name = '') {\n    this._id     = id;\n    this._symbol = symbol;\n    this._name   = name;\n  }\n\n  get id()     {return this._id}\n  get name()   {return this._name}\n  get symbol() {return this._symbol}\n\n  // Returns the symbol string with HTML code.\n  // Specify gainLoss number to determine color.\n  symbolToHTML(gainLoss = +0.0) {\n    const color = Fmt.valueColor(gainLoss);\n    return (<span style={{color:color}}>{this._symbol}</span>);\n  }\n}\n","import React from 'react';\n\n// This class is used to hold and format numeric values.\nexport default class DateTime {\n\n  static DATE_OPTIONS = { year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n\n  constructor(value = '') {\n    const timestamp = Date.parse(value);\n    this._value = isNaN(timestamp) ? new Date() : new Date(timestamp);\n  }\n\n  valueOf() {return this._value}\n\n  // Returns the date formatted for Form input.\n  toForm() {\n    return this._value.toISOString().substring(0, 10);\n  }\n\n\n  // Returns the formatted value string with HTML code.\n  toHTML(locale, useColor = '' ) {\n    const stringValue = this.toString(locale)\n    const color = useColor ? useColor : 'black';\n    return (<span style={{color:color}}>{stringValue}</span>);\n  }\n\n  // Returns a formatted value string.\n  toString(locale) {\n    let formattedValue = '';\n    if (locale) {\n      formattedValue = this.toStringFormatted(locale);\n    } else {\n      formattedValue = this._value.toString();\n    }\n    return formattedValue;\n  }\n\n  // Returns a formatted value string.\n  toStringFormatted(locale) {\n    const dateFormat = new Intl.DateTimeFormat(locale, DateTime.DATE_OPTIONS);\n    return this._value ? dateFormat.format(this._value).replace(',', '') : '';\n  }\n}\n","import DateTime from '../classes/DateTime';\nimport Decimal from '../classes/Decimal';\n\nexport default class Trade {\n  constructor(instrumentId = '', price = '', priceChange = '', tradeDate = '', lastUpdate = '') {\n    this._instrumentId = instrumentId;\n    this._lastUpdate   = new DateTime(lastUpdate);\n    this._price        = new Decimal(price, 'currency');\n    this._priceChange  = new Decimal(priceChange, 'currency', 'delta');\n    this._tradeDate    = new DateTime(tradeDate);\n  }\n\n  get lastUpdate()     {return this._lastUpdate};\n  get price()          {return this._price};\n  get priceChange()    {return this._priceChange};\n  get tradeDate()      {return this._tradeDate};\n}\n","import DateTime from '../classes/DateTime';\nimport Decimal from '../classes/Decimal';\nimport Instrument from '../classes/Instrument';\nimport Trade from '../classes/Trade';\nimport * as Request from '../utils/request';\n\nexport default class Position {\n  constructor(portfolioId, id = '', quantity = '', cost = '', dateAcquired = '') {\n    // persisted\n    this._portfolio_id  = portfolioId;\n    this._id            = id;\n    this._cost          = new Decimal(cost, 'currency');\n    this._dateAcquired  = new DateTime(dateAcquired);\n    this._instrument    = new Instrument();\n    this._quantity      = new Decimal(quantity, 'quantity');\n    this._trade         = new Trade();  // from market data\n    this.updateDerivedValues();         // derived\n  }\n\n  get cost()          {return this._cost};\n  get dateAcquired()  {return this._dateAcquired};\n  get dayChange()     {return this._dayChange};\n  get gainLoss()      {return this._gainLoss};\n  get id()            {return this._id};\n  get instrument()    {return this._instrument};\n  get lastTrade()     {return this._trade.price};\n  get lastUpdate()    {return this._trade.lastUpdate};\n  get lastTradeDate() {return this._trade.tradeDate};\n  get marketValue()   {return this._marketValue};\n  get pctTotalMV()    {return this._pctTotalMV};\n  get portfolio_id()  {return this._portfolio_id};\n  get priceChange()   {return this._trade.priceChange};\n  get quantity()      {return this._quantity};\n\n  set cost(cost)                 {this._cost          = new Decimal(cost, 'currency')};\n  set dateAcquired(dateAcquired) {this._dateAcquired  = new DateTime(dateAcquired)};\n  set instrument(instrument)     {this._instrument    = instrument};\n  set pctTotalMV(pctTotalMV)     {this._pctTotalMV    = new Decimal(pctTotalMV, 'percent')};\n  set quantity(quantity)         {this._quantity      = new Decimal(quantity, 'quantity')};\n\n  reprice(serverTrades) {\n    const serverTrade = serverTrades.find(serverTrade => serverTrade.attributes['instrument-id'].toString() === this._instrument.id);\n    if (serverTrade) {\n      this._trade = new Trade(this._instrument.id,\n                              serverTrade.attributes['trade-price'],\n                              serverTrade.attributes['price-change'],\n                              serverTrade.attributes['trade-date'],\n                              serverTrade.attributes['created-at']);\n      this.updateDerivedValues();\n    }\n  }\n\n  // Recompute position summary info.\n  updateDerivedValues() {\n    this._dayChange   = new Decimal(this.quantity * this.priceChange, 'currency', 'delta');\n    this._marketValue = new Decimal(this.quantity * this.lastTrade, 'currency');\n    this._gainLoss    = new Decimal(this.marketValue - this.cost, 'currency', 'delta');\n    this._pctTotalMV  = new Decimal(0.0, 'percent');\n  }\n\n  // If position strings are valid, returns null. Otherwise, returns error message.\n  static validateStringInput(position, cb) {\n    let errorReturn = null;\n    if (!(/^[A-Z.*+-]+$/.test(position.symbol))) {\n      errorReturn = {name: 'symbol', message: 'Symbol is not valid.'};\n    } else if (Number.isNaN(parseFloat(position.quantity)) || !isFinite(position.quantity)) {\n      errorReturn = {name: 'quantity', message: 'Quantity must be a number.'};\n    } else if (!(Number.parseFloat(position.quantity) >= 0)) {\n      errorReturn = {name: 'quantity', message: 'Quantity must be greater than or equal to zero.'};\n    } else if (Number.isNaN(parseFloat(position.cost)) || !isFinite(position.cost)) {\n      errorReturn = {name: 'cost', message: 'Cost must be a number.'};\n    } else if (position.cost < 0.0) {\n      errorReturn = {name: 'cost', message: 'Cost must be greater than or equal to zero.'};\n    } else if (Number.isNaN(Date.parse(position.dateAcquired))) {\n      errorReturn = {name: 'dateAcquired', message: 'Date Acquired is not valid.'};\n    }\n    if (errorReturn === null) {\n      // async validations should always come last.\n      Request.instrumentSearch({value: position.symbol, exact:true}, instruments => {\n        if (instruments.data.length !== 1) {\n          errorReturn = {name: 'symbol', message: 'Symbol is not valid.'};\n        }\n        cb(errorReturn);\n      });\n    } else {\n      cb(errorReturn);\n    }\n  }\n}\n","import Fmt from '../utils/formatter';\n\nconst userAction = {\n  ERROR   : 'USER_ERROR',\n  UPDATE  : 'USER_UPDATE',\n  UPDATING: 'USER_UPDATING',\n  WARN    : 'USER_WARN',\n};\n\nexport function errorUser(error)  {return {type: userAction.ERROR,  payload: error}}\nexport function updateUser(user)  {return {type: userAction.UPDATE, payload: user}}\nexport function updatingUser()    {return {type: userAction.UPDATING}}\nexport function warnUser(warning) {return {type: userAction.WARN,   payload: warning}}\n\nexport function userReducer(state = {updatingUser: false, user: {locale: 'en-US'}}, action) {\n  let returnObject = null;\n  switch (action.type) {\n    // Error on Portfolio action.\n    case userAction.ERROR: {\n      const {prefix, error} = action.payload;\n      alert(Fmt.serverError(prefix, error));\n      returnObject = Object.assign({}, state, {updatingUser: false});\n      break;\n    }\n    // Update one User.\n    case userAction.UPDATE: {\n      const payloadUser = action.payload;\n      returnObject = Object.assign({}, state, {updatingUser: false, user: payloadUser.data.attributes});\n      break;\n    }\n    // Show that User is being modified.\n    case userAction.UPDATING:\n      returnObject = Object.assign({}, state, {updatingUser: true});\n      break;\n    // Warning on User action.\n    case userAction.WARN: {\n      const {prefix, warning} = action.payload;\n      alert(Fmt.serverError(prefix, warning));\n      returnObject = state;\n      break;\n    }\n    // Default action.\n    default:\n      returnObject = state;\n      break;\n  }\n  return returnObject;\n}\n","import 'isomorphic-fetch';\nimport Instrument from '../classes/Instrument';\nimport Portfolio from '../classes/Portfolio';\nimport Position from '../classes/Position';\nimport {statusCheck} from '../utils/request';\nimport * as PortfolioReducer from '../reducers/portfolioReducer';\nimport * as UserReducer from '../reducers/userReducer';\n\n// Add a new portfolio.\nexport function portfolioAdd(dispatch, portfolio) {\n  fetch('/api/portfolios/', {\n    method:  'POST',\n    headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n    body:    JSON.stringify({name: portfolio.name}),\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(loadedPortfolio => {\n    if (!loadedPortfolio.data.id) {\n      throw new Error('Portfolio add failed!');\n    }\n    const portfolio = new Portfolio(loadedPortfolio.data.id, loadedPortfolio.data.attributes.name);\n    dispatch(PortfolioReducer.addPortfolio(portfolio));\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Add Portfolio: ', error: error.message})))\n}\n\n// Delete a portfolio.\nexport function portfolioDelete(dispatch, portfolioId) {\n  fetch(`/api/portfolios/${portfolioId}`, {\n    method:  'DELETE',\n    headers: {'Accept': 'application/json'},\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(deletedPortfolio => {\n    if (!deletedPortfolio.data.id) {\n      throw new Error('Portfolio delete failed!');\n    }\n    dispatch(PortfolioReducer.deletePortfolio(portfolioId));\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Delete Portfolio: ', error: error.message})))\n}\n\n// Update an existing portfolio.\nexport function portfolioUpdate(dispatch, portfolio) {\n  fetch(`/api/portfolios/${portfolio.id}`, {\n    method:  'PATCH',\n    headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n    body:    JSON.stringify({name: portfolio.name}),\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(updatedPortfolio => {\n    if (!updatedPortfolio.data.id) {\n      throw new Error('Portfolio update failed!');\n    }\n    portfolio.name = updatedPortfolio.data.attributes.name  // Keep original portfolio. New one doesn't have the calculated pricing information.\n    dispatch(PortfolioReducer.updatePortfolio(portfolio));\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Update Portfolio: ', error: error.message})))\n}\n\n// Load all portfolios from server.\nexport function portfoliosLoad(dispatch, loadLivePrices, sortFn) {\n  fetch('/api/portfolios/', {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(serverPortfolios => {\n    // Parse json into Portfolio, Position, and Instrument objects.\n    const portfolios = serverPortfolios.data.map(serverPortfolio => new Portfolio(serverPortfolio.id, serverPortfolio.attributes.name));\n    const instruments = [];\n    const positions   = [];\n    serverPortfolios.included.forEach(relation => {\n      switch(relation.type) {\n        case 'instruments':\n          instruments.push(new Instrument(relation.id, relation.attributes.symbol, relation.attributes.name));\n          break;\n        case 'positions':\n          positions.push(new Position(relation.attributes['portfolio-id'], relation.id, relation.attributes.quantity, relation.attributes.cost, relation.attributes['date-acquired']));\n          break;\n        default:\n          console.log('Error: unknown relation type: ' + relation.type);\n          break;\n      }\n    });\n\n    // Assign Instruments to Positions.\n    serverPortfolios.included.forEach(relation => {\n      switch(relation.type) {\n        case 'positions':\n          const positionId   = relation.id;\n          const position     = positions.find( position => position.id === positionId );\n          const instrumentId = relation.relationships.instrument.data.id;\n          const instrument   = instruments.find( instrument => instrument.id === instrumentId );\n          position.instrument = instrument;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Assign Positions to Portfolios.\n    serverPortfolios.data.forEach(serverPortfolio => {\n      const portfolioId = serverPortfolio.id;\n      const portfolio   = portfolios.find( portfolio => portfolio.id === portfolioId );\n      serverPortfolio.relationships.positions.data.forEach(serverPosition => {\n        switch(serverPosition.type) {\n          case 'positions':\n            const positionId = serverPosition.id;\n            const position   = positions.find( position => position.id === positionId );\n            portfolio.positions.push(position);\n            break;\n          default:\n            break;\n        }\n      });\n      portfolio.updateDerivedValues();\n    });\n\n    const livePrices = (loadLivePrices === true) ? 'livePrices' : '';\n    fetch(`/api/portfolios/last-price?${livePrices}`, {\n      headers: {'Accept': 'application/json'},\n    })\n    .then(statusCheck)\n    .then(response => response.json())\n    .then(trades => {\n      if ('error' in trades) {\n        dispatch(PortfolioReducer.errorPortfolio({prefix: 'Load Portfolios: ', error: trades}));\n      } else {\n        trades.data.forEach(trade => {  // Validate trade data.\n          if (trade.attributes.error !== null) {\n            dispatch(PortfolioReducer.warnPortfolio({prefix: 'Load Portfolios Prices for ', warning: trade.attributes.error}));\n          }\n        });\n        Portfolio.applyPrices(portfolios, trades.data);\n        sortFn(portfolios, Portfolio.sort);\n        dispatch(PortfolioReducer.updateAllPortfolio(portfolios));\n      }\n    })\n    .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Load Portfolios: ', error: error.message})))\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Load Portfolios: ', error: error.message})))\n}\n\n// Create a new position.\nexport function positionAdd(dispatch, position, sortFn) {\n  fetch(`/api/portfolios/${position.portfolio_id}/positions`, {\n    method:  'POST',\n    headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n    body:    JSON.stringify({instrument_symbol: position.symbol, quantity: position.quantity.toString(), cost: position.cost.toString(), date_acquired: position.dateAcquired.toForm()}),\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(updatedPortfolio => {\n    if (!updatedPortfolio.data.id) {\n      throw new Error(`Position add failed! ${updatedPortfolio[0]}.`);\n    }\n    portfoliosLoad(dispatch, false, sortFn);\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Add Position: ', error: error.message})))\n}\n\n// Delete a position.\nexport function positionDelete(dispatch, portfolioId, positionId, sortFn) {\n  fetch(`/api/portfolios/${portfolioId}/positions/${positionId}`, {\n    method:  'DELETE',\n    headers: {'Accept': 'application/json'},\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(updatedPortfolio => {\n    if (!updatedPortfolio.data.id) {\n      throw new Error(`Position delete failed! ${updatedPortfolio[0]}.`);\n    }\n    portfoliosLoad(dispatch, false, sortFn);\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Delete Position: ', error: error.message})))\n}\n\n// Update an existing position.\nexport function positionUpdate(dispatch, position, sortFn) {\n  fetch(`/api/portfolios/${position.portfolio_id}/positions/${position.id}`, {\n    method:  'PATCH',\n    headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n    body:    JSON.stringify({instrument_symbol: position.symbol, quantity: position.quantity.toString(), cost: position.cost.toString(), date_acquired: position.dateAcquired.toForm()}),\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(updatedPortfolio => {\n    if ('error' in updatedPortfolio) {\n      dispatch(PortfolioReducer.errorPortfolio({prefix: 'Update Position: ', error: updatedPortfolio}));\n    }\n    portfoliosLoad(dispatch, false, sortFn);\n  })\n  .catch(error => dispatch(PortfolioReducer.errorPortfolio({prefix: 'Update Position: ', error: error.message})))\n}\n\n// Retrieve User.\nexport function userFetch(dispatch, userId) {\n  return fetch(`/api/users/${userId}`, {headers: {'Accept': 'application/json'}})\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(user => {\n    dispatch(UserReducer.updateUser(user));\n  })\n  .catch(error => dispatch(UserReducer.errorUser({prefix: 'User Fetch: ', error: error.message})))\n}\n\n// Update an existing User.\nexport function userSave(dispatch, user) {\n  fetch(`/api/users/${user.id}`, {\n    method:  'PATCH',\n    headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n    body:    JSON.stringify({locale: user.locale}),\n  })\n  .then(statusCheck)\n  .then(response => response.json())\n  .then(updatedUser => {\n    if (!updatedUser.data.id) {\n      throw new Error('User update failed!');\n    }\n    dispatch(UserReducer.updateUser(updatedUser));\n  })\n  .catch(error => {alert(error.message)});\n}\n","import Portfolio from '../classes/Portfolio';\nimport * as PortfolioReducer from '../reducers/portfolioReducer';\nimport * as FetchAction from './fetchActions';\n\n// Create a new portfolio.\nexport function portfolioAdd(portfolio) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.portfolioAdd(dispatch, portfolio);\n  }\n}\n\n// Delete a portfolio.\nexport function portfolioDelete(portfolioId) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.portfolioDelete(dispatch, portfolioId);\n  }\n}\n\n// Load all portfolios from server.\nexport function portfoliosLoad(loadLivePrices, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.portfoliosLoad(dispatch, loadLivePrices, sortFn);\n  }\n}\n\n// Process a click on the portfolios table column header.\nexport function portfoliosSort(portfolios, property, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    sortFn(portfolios, Portfolio.sort, property);\n    return (dispatch(PortfolioReducer.updateAllPortfolio(portfolios)));\n  }\n}\n\n// Update an existing portfolio.\nexport function portfolioUpdate(portfolio) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.portfolioUpdate(dispatch, portfolio);\n  }\n}\n","// This class is used to hold and format numeric values.\nexport default class ChartData {\n  // Convert series price data to chart-ready data points.\n  static seriesDataToChartData(series, portfolioName, portfolioSymbolIds) {\n    // chartData:\n    // { instrumentId: {symbol: 'symbol', name: 'name', shares: #, data: []},\n    //   instrumentId: {symbol: 'symbol', name: 'name', shares: #, data: []},\n    //   instrumentId: {symbol: 'symbol', name: 'name', shares: #, data: []},\n    // }\n    const chartData = {};\n    if (series.data.length === 0) {  // Protect against no series data available.\n      return chartData;\n    }\n    // Init chartData for each instrument.\n    series.included.forEach(seriesInstrument => {\n      chartData[seriesInstrument.id] = {'symbol': seriesInstrument.attributes.symbol, 'name': seriesInstrument.attributes.name, 'shares': 0, 'data': []};\n    });\n    // NOTE: We will use the instrument with the latest start date as the start date for every instrument\n    //       in the series so we can have a common starting point across all instruments.\n    const latestStartDate = ChartData.latestSeriesStartDate(series);\n    // Convert each qualifying series data point to a chart data point.\n    series.data.forEach(seriesInstrumentDataPoint => {\n      const attributes = seriesInstrumentDataPoint.attributes;\n      const relationships = seriesInstrumentDataPoint.relationships;\n      const instrumentId = relationships.instrument.data.id;\n      if (attributes['series-date'] >= latestStartDate) {\n        const plotPoint = ChartData.convertToPlotPoint(attributes, chartData[instrumentId]);\n        if (plotPoint !== null) {\n          chartData[instrumentId]['data'].push(plotPoint);\n        }\n      }\n    });\n    return ChartData.addPortfolioSummary(chartData, portfolioName, portfolioSymbolIds);\n  };\n\n  // Creates portfolio composite series data from contents of individual instrument series data.\n  // NOTE: Due to data feed quirks, we need to trim end dates to a date where all instruments still have data.\n  // The AV data feed is sometimes up-to-date and sometimes not.\n  // Maybe the last monthly data point is today, or yesterday, or maybe it's EOM from last month.\n  // By using series.length as a measure of date range, we assume series data has been normalized to a common start date by this point.\n  // If we didn't adjust, our portfolio value would not be correct where a particular date is missing.\n  // Also, the AV feed is missing monthly series data for some instruments.\n  // Side Effects: adds portfolio data series to chartData.\n  // Returns chartData.\n  static addPortfolioSummary(chartData, portfolioName, portfolioSymbolIds) {\n    let shortestSeries = Number.MAX_SAFE_INTEGER; // Find series with the earliest end date.\n    Object.values(chartData).forEach(symbolSeries => {\n      if (symbolSeries['data'].length < shortestSeries) {\n        shortestSeries = symbolSeries['data'].length;\n      }\n    });\n\n    // Insert portfolio 'instrument', so it appears first in chart legend.\n    chartData[0] = {'symbol': 'Portfolio', 'name': portfolioName, 'data': []};\n\n    // Sum each instrument's data points into the portfolio instrument.\n    let symbolCount = portfolioSymbolIds.length;  // Keep track of how many instruments were found to have series data. Used to calc adjusted portfolio value.\n    portfolioSymbolIds.forEach(portfolioSymbolId => {\n      const symbolSeries = chartData[portfolioSymbolId];\n      if (symbolSeries) {\n        symbolSeries['data'].forEach((dataPoint,i) => {\n          if (i < shortestSeries) {\n            if (i === chartData[0]['data'].length) {\n              chartData[0]['data'].push([dataPoint[0], dataPoint[1]]);\n            } else {\n              chartData[0]['data'][i][1] += dataPoint[1];\n            }\n          }\n        });\n      } else {\n        symbolCount -= 1;  // Need to account for when a portfolio symbol is not returned in series data.\n      }\n    });\n\n    // Rebase the portfolio amounts to the original starting amount.\n    chartData[0]['data'].forEach(dataPoint => {\n      dataPoint[1] /= symbolCount;\n    });\n    return chartData;\n  }\n\n  // Convert monthly series data point to a chart plot point, beginning at START_YEAR, for now.\n  // Side effect: updates sharesHeld.\n  static convertToPlotPoint(dataPoint, chartDataInstrument) {\n    const closePrice = parseFloat(dataPoint['adjusted-close-price']);\n    let sharesHeld = chartDataInstrument['shares'];\n    // Establish beginning sharesHeld.\n    if (sharesHeld === 0 && closePrice > 0.0) {\n      const START_VALUE = 10.0;  // in thousands\n      sharesHeld = START_VALUE / closePrice;\n      chartDataInstrument['shares'] = sharesHeld;\n    }\n    // No need for dividend reinvestment since we are now using adjusted price data.\n    // If there was a dividend, reinvest it in more shares.\n    // const dividendAmount = parseFloat(dataPoint['dividend-amount']);\n    // if (dividendAmount > 0.0) {\n    //   sharesHeld += (dividendAmount * sharesHeld) / closePrice;\n    //   chartDataInstrument['shares'] = sharesHeld;\n    // }\n    // Return the datapoint date and value.\n    return [Date.parse(dataPoint['series-date']), sharesHeld * closePrice];\n  }\n\n  // Of all the instruments in the series, return the series-date of the instrument series that starts the latest.\n  // Assumes series data is grouped by instrument and is in series-date ascending order.\n  // That is, the first data point we encounter for each instrument will be its earliest data point.\n  static latestSeriesStartDate(series) {\n    let latestStartDate = '';\n    let currentInstrumentId = null;\n    series.data.forEach(seriesInstrumentDataPoint => {\n      const seriesInstrumentId = seriesInstrumentDataPoint.relationships.instrument.data.id;\n      if (seriesInstrumentId !== currentInstrumentId) {\n        currentInstrumentId = seriesInstrumentId;\n        const dataPointStartDate = seriesInstrumentDataPoint.attributes['series-date'];\n        if (dataPointStartDate > latestStartDate) {\n          latestStartDate = dataPointStartDate;\n        }\n      }\n    });\n    return latestStartDate;\n  }\n}\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport {Chart, HighchartsChart, Legend, LineSeries, Title, Tooltip, withHighcharts, XAxis, YAxis} from 'react-jsx-highcharts';\nimport Fmt from '../utils/formatter';\n\nconst plotOptions = {  // leaving here for future use.\n};\n\nconst PortfolioChart = (props) => {\n  const {portfolioName, refData} = props;\n\n  function plotInstruments() {\n    // Default only portfolio to initially chart as visible along with S&P 500.\n    return Object.values(refData).map(series => {\n      return (\n        <LineSeries\n          key={series.symbol}\n          id={series.name}\n          marker={{enabled: false}}\n          visible={(series.name === portfolioName && series.data.length > 0) || series.symbol === 'SPY'}\n          name={`${Fmt.truncate(series.name, 20)} (${series.symbol})`}\n          data={series.data}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className='app'>\n      <HighchartsChart plotOptions={plotOptions}>\n        <Chart type='spline'/>\n        <Title>$10,000 Investment Comparison</Title>\n        <Legend />\n        <Tooltip\n          shared={true}\n          useHTML={true}\n          valueDecimals='3'\n          headerFormat='<small>{point.key}</small><table>'\n          pointFormat='<tr><td style=\"color: {series.color}\">{series.name}: </td><td style=\"text-align: right\"><b>&dollar;{point.y}K</b></td></tr>'\n          footerFormat='</table>'\n        />\n        <XAxis type='datetime' crosshair={true} />\n        <YAxis id='yAxis' labels={{format: '\\u0024{value}K'}}>\n          {plotInstruments()}\n        </YAxis>\n      </HighchartsChart>\n    </div>\n  );\n}\n\nexport default withHighcharts(PortfolioChart, Highcharts);\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as portfolioActions from '../actions/portfolioActions';\nimport ChartData from '../classes/ChartData';\nimport Series from '../classes/Series';\nimport Fmt from '../utils/formatter';\nimport {Button, Header, Icon, Modal} from 'semantic-ui-react';\nimport * as Request from '../utils/request';\nimport PortfolioChart from '../components/PortfolioChart';\n\n// This class handles display window of the Portfolio chart.\nclass PortfolioChartPage extends Component {\n\n  static CHART_RANGE = 5;  // years\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      refData: [],\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.resetComponent();\n  }\n\n  refreshData = () => {\n    const {portfolio} = this.props;\n    const portfolioSymbolIds = portfolio.positions.map(position => position.instrument.id);\n    const portfolioSymbols = portfolio.positions.map(position => position.instrument.symbol);\n    const symbols = [...new Set(portfolioSymbols.concat(Series.ETF_SYMBOLS))].join(',');  // uniquify portfolio and ETF symbol lists and turn into comma-separated string.\n    const dateNow = new Date(Date.now());\n    const start_date = new Date(dateNow.getFullYear() - PortfolioChartPage.CHART_RANGE, dateNow.getMonth(), dateNow.getDate()).toJSON();\n    const end_date = dateNow.toJSON();\n    Request.seriesFetch(symbols, start_date, end_date, series => {\n      if ('error' in series) {\n        alert(Fmt.serverError('Refresh Series', series.error));\n      } else {\n        const chartData = ChartData.seriesDataToChartData(series, portfolio.name, portfolioSymbolIds);\n        this.setState({refData: chartData});\n      }\n    });\n  }\n\n  resetComponent = () => {\n    this.setState({\n      modalOpen: false,\n    });\n  }\n\n  handleCancel = () => {\n    this.resetComponent();\n  }\n\n  handleOpen = () => {\n    this.refreshData();\n    this.setState({modalOpen: true});\n  }\n\n  render() {\n    const {iconColor, iconName, portfolio, tooltip} = this.props;\n    const {refData, modalOpen} = this.state;\n    return (\n      <Modal\n        closeIcon\n        closeOnDimmerClick={false}\n        trigger={<Icon name={iconName} title={tooltip} id='portfolioChart' link color={iconColor} onClick={this.handleOpen}/>}\n        open={modalOpen}\n        onClose={this.handleCancel}\n        size={'large'}\n        style={{paddingBottom:'10px'}}\n      >\n        <Modal.Header><Header content={portfolio.nameToHTML()} icon='chart line' size='small'/></Modal.Header>\n        <Modal.Content><PortfolioChart refData={refData} portfolioName={portfolio.name}/></Modal.Content>\n        <Modal.Actions><Button floated='left' color='red' onClick={this.handleCancel}>Close</Button></Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nPortfolioChartPage.propTypes = {\n  iconColor: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  portfolio: PropTypes.object.isRequired,\n  tooltip: PropTypes.string.isRequired,\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(portfolioActions, dispatch)};\n}\n\nexport default connect(undefined, mapDispatchToProps)(PortfolioChartPage);\n","import React from 'react';\nimport {Form} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport const PortfolioEdit = (props) => {\n  const {onChange, onSubmit, portfolio} = props;\n  return (\n    <Form id='portfolioEditForm' onSubmit={onSubmit}>\n      <Form.Group>\n        <Form.Input width={4} label='Name' placeholder='Name' name='name' value={portfolio.name} onChange={onChange} autoFocus required/>\n      </Form.Group>\n    </Form>\n  );\n}\n\nPortfolioEdit.propTypes = {\n  portfolio: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n}\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _cloneDeep from 'lodash.clonedeep';\nimport * as portfolioActions from '../actions/portfolioActions';\nimport PropTypes from 'prop-types';\nimport {Button, Header, Icon, Modal} from 'semantic-ui-react';\nimport {PortfolioEdit} from '../components/PortfolioEdit';\n\n// This class handles the editing of Portfolio attributes.\nclass PortfolioEditPage extends Component {\n  UNSAFE_componentWillMount() {\n    this.resetComponent();\n  }\n\n  resetComponent = () => {\n    this.setState({\n      editedPortfolio: {},\n      modalOpen: false,\n    });\n  }\n\n  handleCancel = () => {\n    this.resetComponent();\n  }\n\n  handleChange = (e, {name, value}) => {\n    const {editedPortfolio} = this.state;\n    const newPortfolio = _cloneDeep(editedPortfolio);\n    newPortfolio[name] = value;\n    this.setState({editedPortfolio: newPortfolio});\n  }\n\n  handleOpen = () => {\n    const {portfolio} = this.props;\n    this.setState({editedPortfolio: _cloneDeep(portfolio), modalOpen: true});\n  }\n\n  handleSubmit = () => {\n    const {actions} = this.props;\n    const {editedPortfolio} = this.state;\n    editedPortfolio.id ? actions.portfolioUpdate(editedPortfolio) : actions.portfolioAdd(editedPortfolio);\n    this.resetComponent();\n  }\n\n  render() {\n    const {iconColor, iconName, tooltip} = this.props;\n    const {editedPortfolio, modalOpen} = this.state;\n    return (\n      <Modal\n        closeOnDimmerClick={false}\n        trigger={<Icon name={iconName} title={tooltip} id='portfolioEdit' link color={iconColor} onClick={this.handleOpen}/>}\n        open={modalOpen}\n        onClose={this.handleCancel}\n        style={{paddingBottom:'10px'}}\n      >\n        <Modal.Header><Header content='Portfolio Editor' icon='edit' size='small'/></Modal.Header>\n        <Modal.Content><PortfolioEdit portfolio={editedPortfolio} onChange={this.handleChange} onSubmit={this.handleSubmit}/></Modal.Content>\n        <Modal.Actions>\n          <Button floated='left' color='red' onClick={this.handleCancel}>Cancel</Button>\n          <Button type='submit' floated='left' color='green' form='portfolioEditForm'>Submit</Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nPortfolioEditPage.propTypes = {\n  iconColor: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  portfolio: PropTypes.object.isRequired,\n  tooltip: PropTypes.string.isRequired,\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(portfolioActions, dispatch)};\n}\n\nexport default connect(undefined, mapDispatchToProps)(PortfolioEditPage);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Header, Table} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport ConfirmDialog from '../containers/ConfirmDialog';\nimport Portfolio from '../classes/Portfolio';\nimport PortfolioChartPage from '../containers/PortfolioChartPage';\nimport PortfolioEditPage from '../containers/PortfolioEditPage';\n\nexport const Portfolios = (props) => {\n  const {onClickColHeader, onClickRemove, portfolios, refreshPortfolios, sortColName, sortDirection, totalCost, totalDayChange, totalGainLoss, totalMarketValue, updatingPortfolio, userLocale} = props;\n\n  function columnTitles() {\n    return (\n      <Table.Row textAlign='center'>\n        <Table.HeaderCell>{<PortfolioEditPage portfolio={new Portfolio()} iconName='add' iconColor='blue' tooltip='Add a portfolio'/>}</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'name'        ? sortDirection : null} onClick={() => onClickColHeader('name')} textAlign='left'>Portfolios</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'marketValue' ? sortDirection : null} onClick={() => onClickColHeader('marketValue')}>Market Value</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'dayChange'   ? sortDirection : null} onClick={() => onClickColHeader('dayChange')}>Day Change</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'cost'        ? sortDirection : null} onClick={() => onClickColHeader('cost')}>Cost Basis</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'gainLoss'    ? sortDirection : null} onClick={() => onClickColHeader('gainLoss')}>Gain/Loss</Table.HeaderCell>\n      </Table.Row>\n    );\n  }\n\n  function listPortfolios() {\n    return portfolios.map(portfolio => {\n      return (\n        <Table.Row key={portfolio.id} textAlign='right'>\n          <Table.Cell textAlign='center'>\n            {<PortfolioEditPage portfolio={portfolio} iconName='edit' iconColor='blue' tooltip='Edit portfolio name'/>}\n            &emsp;{<ConfirmDialog triggerType='icon' name='trash' color='red' title='Delete portfolio' header={`Delete Portfolio ${portfolio.name}`} onClickConfirm={onClickRemove(portfolio.id)}/>}\n            &emsp;{<PortfolioChartPage portfolio={portfolio} iconName='chart line' iconColor='blue' tooltip='Chart portfolio'/>}\n          </Table.Cell>\n          <Table.Cell textAlign='left'><Link to={`/portfolios/${portfolio.id}`} title='View details'>{portfolio.nameToHTML()}</Link></Table.Cell>\n          <Table.Cell>{portfolio.marketValue.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{portfolio.dayChange.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{portfolio.cost.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{portfolio.gainLoss.toHTML(userLocale)}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  }\n\n  function sumPortfolios() {\n    return (\n      <Table.Row textAlign='right'>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell textAlign='left'>Total</Table.HeaderCell>\n        <Table.HeaderCell>{totalMarketValue.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell>{totalDayChange.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell>{totalCost.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell>{totalGainLoss.toHTML(userLocale)}</Table.HeaderCell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <div>\n      <Header size='medium' color='purple' style={{marginBottom:0, marginLeft:'4px'}}>\n        Account Summary\n        <span style={{float:'right'}}>\n          <Button content='Refresh' icon='refresh' title='Refresh portfolios' loading={updatingPortfolio} compact inverted size='tiny' style={{paddingRight:'3px', color:'purple'}} onClick={() => refreshPortfolios()}/>\n        </span>\n      </Header>\n      <Table compact sortable striped style={{marginTop:0}}>\n        <Table.Header>{columnTitles()}</Table.Header>\n        <Table.Body>{listPortfolios()}</Table.Body>\n        <Table.Footer>{sumPortfolios()}</Table.Footer>\n      </Table>\n    </div>\n  );\n}\n\nPortfolios.propTypes = {\n  onClickColHeader: PropTypes.func.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n  portfolios: PropTypes.arrayOf(PropTypes.object).isRequired,\n  refreshPortfolios: PropTypes.func.isRequired,\n  sortColName: PropTypes.string.isRequired,\n  sortDirection: PropTypes.string.isRequired,\n  totalCost: PropTypes.object.isRequired,\n  totalDayChange: PropTypes.object.isRequired,\n  totalGainLoss: PropTypes.object.isRequired,\n  totalMarketValue: PropTypes.object.isRequired,\n  updatingPortfolio: PropTypes.bool.isRequired,\n  userLocale: PropTypes.string.isRequired,\n}\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as portfolioActions from '../actions/portfolioActions';\nimport Portfolio from '../classes/Portfolio';\nimport {Portfolios} from '../components/Portfolios';\n\nclass PortfoliosPage extends Component {\n  componentDidMount() {\n    this.props.portfolios.length || this.props.actions.portfoliosLoad(false, this.props.sortFn)\n  }\n\n  refreshPortfolios = () => {\n    this.props.actions.portfoliosLoad(true, this.props.sortFn);\n  }\n\n  removePortfolio = (portfolioId) => {\n    const deleteFn = this.props.actions.portfolioDelete;\n    return function() {\n      deleteFn(portfolioId);\n    }\n  }\n\n  sortPortfolios = (columnName) => {\n    this.props.actions.portfoliosSort(this.props.portfolios, columnName, this.props.sortFn);\n  }\n\n  render() {\n    const {portfolios, sortFn, updatingPortfolio, userLocale} = this.props;\n    const {sumCost, sumDayChange, sumGainLoss, sumMarketValue} = Portfolio.accountSummary(portfolios);\n    const sortTerms = sortFn();\n    return (<Portfolios portfolios={portfolios} updatingPortfolio={updatingPortfolio} totalCost={sumCost} totalDayChange={sumDayChange} totalGainLoss={sumGainLoss} totalMarketValue={sumMarketValue} refreshPortfolios={this.refreshPortfolios} onClickRemove={this.removePortfolio} onClickColHeader={this.sortPortfolios} sortColName={sortTerms.primary.property} sortDirection={sortTerms.primary.direction} userLocale={userLocale}/>);\n  }\n}\n\nPortfoliosPage.propTypes = {\n  actions: PropTypes.object.isRequired,\n  portfolios: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortFn: PropTypes.func.isRequired,\n  updatingPortfolio: PropTypes.bool.isRequired,\n  userLocale: PropTypes.string.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {portfolios: state.portfolios.portfolios, sortFn: state.portfolios.sortFn, updatingPortfolio: state.portfolios.updatingPortfolio, userLocale: state.users.user.locale};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(portfolioActions, dispatch)};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PortfoliosPage);\n","import Portfolio from '../classes/Portfolio';\nimport * as PortfolioReducer from '../reducers/portfolioReducer';\nimport * as FetchAction from './fetchActions';\n\n// Create a new position.\nexport function positionAdd(position, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.positionAdd(dispatch, position, sortFn);\n  }\n}\n\n// Delete a position.\nexport function positionDelete(portfolioId, positionId, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.positionDelete(dispatch, portfolioId, positionId, sortFn);\n  }\n}\n\n// Process a click on the positions table column header.\nexport function positionsSort(portfolios, property, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    sortFn(portfolios, Portfolio.sort, null, property);\n    return (dispatch(PortfolioReducer.updateAllPortfolio(portfolios)));\n  }\n}\n\n// Update an existing position.\nexport function positionUpdate(position, sortFn) {\n  return function(dispatch) {\n    dispatch(PortfolioReducer.updatingPortfolio());\n    FetchAction.positionUpdate(dispatch, position, sortFn);\n  }\n}\n","import React from 'react';\nimport {Form, Message} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport const PositionEdit = (props) => {\n  const {formError, onChange, onSubmit, position} = props;\n  return (\n    <Form id='positionEditForm' onSubmit={onSubmit} error={Object.keys(formError).length !== 0}>\n      <Form.Group>\n        <Form.Input width={4} error={formError.name === 'symbol'} label='Symbol' placeholder='Symbol' name='symbol' value={position.symbol} onChange={onChange} autoFocus required/>\n        <Form.Input width={4} error={formError.name === 'quantity'} label='Quantity' placeholder='Quantity' name='quantity' value={position.quantity} onChange={onChange} required/>\n        <Form.Input width={4} error={formError.name === 'cost'} label='Cost Basis' placeholder='Cost Basis' name='cost' value={position.cost} onChange={onChange} required/>\n        <Form.Input width={4} error={formError.name === 'dateAcquired'} label='Date Acquired' type='date' placeholder='YYYY-MM-DD' name='dateAcquired' value={position.dateAcquired} onChange={onChange} required/>\n      </Form.Group>\n      <Message hidden={Object.keys(formError).length !== 0} content='Update position info. Press Cancel or Submit when done.'/>\n      <Message error content={formError.message}/>\n    </Form>\n  );\n}\n\nPositionEdit.propTypes = {\n  formError: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  position: PropTypes.object.isRequired,\n}\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _cloneDeep from 'lodash.clonedeep';\nimport {Button, Header, Icon, Modal} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Position from '../classes/Position';\nimport * as positionActions  from '../actions/positionActions';\nimport {PositionEdit} from '../components/PositionEdit';\n\n// This class handles the editing of a Position.\n// Note: This component is injecting instrument_symbol into the object instance.\n//       This is because we don't have an instrument to work with at this point; Just a symbol.\n//       We will convert this symbol to an instrument at the server.\n\n// TODO: add real instrument in validation?\n\nclass PositionEditPage extends Component {\n  UNSAFE_componentWillMount() {\n    this.resetComponent();\n  }\n\n  resetComponent = () => {\n    this.setState({\n      editedPosition: {},\n      stringPosition: {\n        symbol      : '',\n        quantity    : '',\n        cost        : '',\n        dateAcquired: '',\n      },\n      formError: {},\n      modalOpen: false,\n    });\n  }\n\n  handleCancel = () => {\n    this.resetComponent();\n  }\n\n  handleChange = (e, {name, value}) => {\n    const {stringPosition} = this.state;\n    const newValue = (name === 'symbol') ? value.toUpperCase() : value;\n    stringPosition[name] = newValue;\n    this.setState({stringPosition: stringPosition});\n  }\n\n  handleOpen = () => {\n    const {stringPosition} = this.state;\n    const {position} = this.props;\n    stringPosition['symbol']       = position.instrument.symbol;\n    stringPosition['quantity']     = position.quantity;\n    stringPosition['cost']         = position.cost;\n    stringPosition['dateAcquired'] = position.dateAcquired.toForm();\n    this.setState({\n      editedPosition: _cloneDeep(position),\n      modalOpen: true,\n      stringPosition: stringPosition,\n    });\n  }\n\n  handleSubmit = () => {\n    const {actions, sortFn} = this.props;\n    const {editedPosition, stringPosition} = this.state;\n    Position.validateStringInput(stringPosition, error => {\n      if (error) {\n        this.setState({formError: error});\n      } else {\n        editedPosition.symbol       = stringPosition.symbol;\n        editedPosition.quantity     = stringPosition.quantity;\n        editedPosition.cost         = stringPosition.cost;\n        editedPosition.dateAcquired = stringPosition.dateAcquired;\n        editedPosition.id ? actions.positionUpdate(editedPosition, sortFn) : actions.positionAdd(editedPosition, sortFn);\n        this.resetComponent();\n      }\n    });\n  }\n\n  render() {\n    const {iconColor, iconName, tooltip} = this.props;\n    const {formError, modalOpen, stringPosition} = this.state;\n    return (\n      <Modal\n        closeOnDimmerClick={false}\n        trigger={<Icon name={iconName} title={tooltip} link color={iconColor} onClick={this.handleOpen}/>}\n        open={modalOpen}\n        onClose={this.handleCancel}\n        style={{paddingBottom:'10px'}}\n      >\n        <Modal.Header><Header content='Position Editor' icon='edit' size='small'/></Modal.Header>\n        <Modal.Content><PositionEdit position={stringPosition} formError={formError} onChange={this.handleChange} onSubmit={this.handleSubmit}/></Modal.Content>\n        <Modal.Actions>\n          <Button floated='left' color='red' onClick={this.handleCancel}>Cancel</Button>\n          <Button type='submit' floated='left' color='green' form='positionEditForm'>Submit</Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nPositionEditPage.propTypes = {\n  iconColor: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  position: PropTypes.object.isRequired,\n  tooltip: PropTypes.string.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {sortFn: state.portfolios.sortFn};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(positionActions, dispatch)};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PositionEditPage);\n","import React from 'react';\nimport {Button, Header, Table} from 'semantic-ui-react';\nimport ConfirmDialog from '../containers/ConfirmDialog';\nimport PropTypes from 'prop-types';\nimport Position  from '../classes/Position';\nimport PortfolioChartPage from '../containers/PortfolioChartPage';\nimport PositionEditPage from '../containers/PositionEditPage';\n\nexport const Positions = (props) => {\n  const {onClickColHeader, onClickRemove, portfolio, portfolioRefresh, sortColName, sortDirection, updatingPortfolio, userLocale} = props;\n\n  function columnTitles() {\n    return (\n      <Table.Row textAlign='center'>\n        <Table.HeaderCell>{<PositionEditPage position={new Position(portfolio.id)} iconName='add' iconColor='blue' tooltip='Add a position'/>}</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'symbol'        ? sortDirection : null} textAlign='left' onClick={() => onClickColHeader('symbol')}>Symbol</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'quantity'      ? sortDirection : null} onClick={() => onClickColHeader('quantity')}>Quantity</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'lastTrade'     ? sortDirection : null} onClick={() => onClickColHeader('lastTrade')}>Price</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'priceChange'   ? sortDirection : null} onClick={() => onClickColHeader('priceChange')}>Change</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'marketValue'   ? sortDirection : null} onClick={() => onClickColHeader('marketValue')}>Market Value</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'pctTotalMV'    ? sortDirection : null} onClick={() => onClickColHeader('pctTotalMV')}>% of Portfolio</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'dayChange'     ? sortDirection : null} onClick={() => onClickColHeader('dayChange')}>Day Change</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'cost'          ? sortDirection : null} onClick={() => onClickColHeader('cost')}>Cost Basis</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'gainLoss'      ? sortDirection : null} onClick={() => onClickColHeader('gainLoss')}>Gain/Loss</Table.HeaderCell>\n        <Table.HeaderCell sorted={sortColName === 'lastTradeDate' ? sortDirection : null} onClick={() => onClickColHeader('lastTradeDate')}>Last Trade</Table.HeaderCell>\n      </Table.Row>\n    );\n  }\n\n  function listPositions(positions, totalMV) {\n    return positions.map(position => {\n      position.pctTotalMV = position.marketValue / totalMV;\n      return (\n        <Table.Row key={position.id} textAlign='right'>\n          <Table.Cell textAlign='center'>\n            {<PositionEditPage position={position} iconName='edit' iconColor='blue' tooltip='Edit position'/>}\n            {<ConfirmDialog triggerType='icon' name='trash' color='red' title='Delete position' header={`Delete Position ${position.instrument.symbol}`} onClickConfirm={onClickRemove(portfolio.id, position.id)}/>}\n          </Table.Cell>\n          <Table.Cell textAlign='left' title={position.instrument.name}>{position.instrument.symbolToHTML(position.gainLoss)}</Table.Cell>\n          <Table.Cell>{position.quantity.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.lastTrade.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.priceChange.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.marketValue.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.pctTotalMV.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.dayChange.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.cost.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.gainLoss.toHTML(userLocale)}</Table.Cell>\n          <Table.Cell>{position.lastTradeDate.toHTML(userLocale)}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  }\n\n  function sumPositions() {\n    return (\n      <Table.Row textAlign='right'>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell textAlign='left'>Total</Table.HeaderCell>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell>{portfolio.marketValue.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell></Table.HeaderCell>\n        <Table.HeaderCell>{portfolio.dayChange.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell>{portfolio.cost.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell>{portfolio.gainLoss.toHTML(userLocale)}</Table.HeaderCell>\n        <Table.HeaderCell></Table.HeaderCell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <div>\n      <Header size='medium' color='purple' style={{marginBottom:0, marginLeft:'4px'}}>\n        {portfolio.nameToHTML()}\n        <span>\n          &emsp;{<PortfolioChartPage portfolio={portfolio} iconName='chart line' iconColor='blue' tooltip='Chart portfolio'/>}\n        </span>\n        <span style={{float:'right'}}>\n          <Button content='Refresh' icon='refresh' title='Refresh positions' loading={updatingPortfolio} compact inverted size='tiny' style={{paddingRight:'3px', color:'purple'}} onClick={() => portfolioRefresh()}/>\n        </span>\n      </Header>\n      <Table compact sortable striped style={{marginTop:0}}>\n        <Table.Header>{columnTitles()}</Table.Header>\n        <Table.Body>{listPositions(portfolio.positions, portfolio.marketValue)}</Table.Body>\n        <Table.Footer>{sumPositions()}</Table.Footer>\n      </Table>\n    </div>\n  );\n}\n\nPositions.propTypes = {\n  onClickColHeader: PropTypes.func.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n  portfolio: PropTypes.object.isRequired,\n  portfolioRefresh: PropTypes.func.isRequired,\n  sortColName: PropTypes.string.isRequired,\n  sortDirection: PropTypes.string.isRequired,\n  updatingPortfolio: PropTypes.bool.isRequired,\n  userLocale: PropTypes.string.isRequired,\n}\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as positionActions  from '../actions/positionActions';\nimport * as portfolioActions from '../actions/portfolioActions';\nimport {Positions} from '../components/Positions';\n\nclass PositionsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolioId: this.props.match.params.id,\n    };\n  }\n\n  componentDidMount() {\n    this.props.portfolios.length || this.props.actions.portfoliosLoad(false, this.props.sortFn)\n  }\n\n  portfolioRefresh = () => {\n    this.props.actions.portfoliosLoad(true, this.props.sortFn);\n  }\n\n  positionRemove = (portfolioId, positionId) => {\n    const deleteFn = this.props.actions.positionDelete;\n    const sortFn   = this.props.sortFn;\n    return function() {\n      deleteFn(portfolioId, positionId, sortFn);\n    }\n  }\n\n  positionsSort = (columnName) => {\n    this.props.actions.positionsSort(this.props.portfolios, columnName, this.props.sortFn);\n  }\n\n  render() {\n    const {portfolios, sortFn, updatingPortfolio, userLocale} = this.props;\n    const portfolio = portfolios.find(portfolio => portfolio.id === this.state.portfolioId);\n    if (portfolio) {  // may be null until props.portfolios is loaded.\n      const sortTerms = sortFn();\n      return (<Positions portfolio={portfolio} updatingPortfolio={updatingPortfolio} portfolioRefresh={this.portfolioRefresh} onClickSubmit={this.positionSubmit} onClickRemove={this.positionRemove} onClickColHeader={this.positionsSort} sortColName={sortTerms.secondary.property} sortDirection={sortTerms.secondary.direction} userLocale={userLocale}/>);\n    } else {\n      return null;\n    }\n  }\n}\n\nPositionsPage.propTypes = {\n  actions: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  portfolios: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortFn: PropTypes.func.isRequired,\n  updatingPortfolio: PropTypes.bool.isRequired,\n  userLocale: PropTypes.string.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {portfolios: state.portfolios.portfolios, sortFn: state.portfolios.sortFn, updatingPortfolio: state.portfolios.updatingPortfolio, userLocale: state.users.user.locale};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators({...portfolioActions, ...positionActions}, dispatch)};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PositionsPage);\n","import React from 'react';\nimport {Form} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport const SettingsEdit = (props) => {\n  const localeOptions = [ { key: 'de-DE', value: 'de-DE', text: 'German - Germany' }, { key: 'en-US', value: 'en-US', text: 'English-USA' }, { key: 'en-GB', value: 'en-GB', text: 'English-Great Britain' } ];\n  const {onChange, onSubmit, user} = props;\n\n  return (\n    <Form id='settingsEditForm' onSubmit={onSubmit}>\n      <Form.Group>\n        <Form.Select label='Locale' placeholder='Locale' name='locale' options={localeOptions} value={user.locale} onChange={onChange} required/>\n      </Form.Group>\n    </Form>\n  );\n}\n\nSettingsEdit.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n}\n","import * as UserReducer from '../reducers/userReducer';\nimport * as FetchAction from './fetchActions';\n\nconst GUEST_USER_ID = 1;\n\n// Load a user from server.\nexport function userLoad() {\n  return function(dispatch) {\n    dispatch(UserReducer.updatingUser());\n    FetchAction.userFetch(dispatch, GUEST_USER_ID);\n  }\n}\n\n// Update an existing user.\nexport function userUpdate(user) {\n  return function(dispatch) {\n    dispatch(UserReducer.updatingUser());\n    FetchAction.userSave(dispatch, user);\n  }\n}\n","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {Button, Header, Menu, Modal} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport {SettingsEdit} from '../components/SettingsEdit';\nimport * as userActions from '../actions/userActions';\n\nclass SettingsEditPage extends Component {\n  UNSAFE_componentWillMount() {\n    this.resetComponent();\n    this.props.actions.userLoad();\n  }\n\n  resetComponent = () => {\n    this.setState({\n      editedUser: {},\n      modalOpen: false,\n    });\n  }\n\n  handleCancel = () => {\n    this.resetComponent();\n  }\n\n  handleChange = (e, {name, value}) => {\n    this.setState({\n      editedUser: {\n        ...this.state.editedUser,\n        [name]: value,\n      },\n    });\n  }\n\n  handleOpen = () => {\n    const {user} = this.props;\n    if (user) {\n      this.setState({editedUser: {...user}});\n    }\n    this.setState({modalOpen: true});\n  }\n\n  handleSubmit = () => {\n    this.props.actions.userUpdate(this.state.editedUser);\n    this.resetComponent();\n  }\n\n  render() {\n    const {editedUser, modalOpen} = this.state;\n    return (\n      <Modal\n        closeOnDimmerClick={false}\n        trigger={<Menu.Item onClick={this.handleOpen}>Settings</Menu.Item>}\n        open={modalOpen}\n        onClose={this.handleCancel}\n        style={{paddingBottom:'10px'}}\n      >\n        <Modal.Header><Header content='Settings Editor' icon='setting' size='small'/></Modal.Header>\n        <Modal.Content><SettingsEdit user={editedUser} onChange={this.handleChange} onSubmit={this.handleSubmit}/></Modal.Content>\n        <Modal.Actions>\n          <Button floated='left'color='red' onClick={this.handleCancel}>Cancel</Button>\n          <Button type='submit' floated='left' color='green' form='settingsEditForm'>Submit</Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nSettingsEditPage.propTypes = {\n  user: PropTypes.object.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {user: state.users.user, updatingUser: state.users.updatingUser};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(userActions, dispatch)};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsEditPage);\n","import React from 'react';\nimport {Form, Grid, Table} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport const Symbols = (props) => {\n  const {serverInstruments, onChange, searchValue} = props;\n\n  function columnTitles() {\n    return (\n      <Table.Row>\n        <Table.HeaderCell>Name</Table.HeaderCell>\n        <Table.HeaderCell>Symbol</Table.HeaderCell>\n      </Table.Row>\n    );\n  }\n\n  function listInstruments() {\n    return serverInstruments.map(serverInstrument => {\n      return (\n        <Table.Row key={serverInstrument.id}>\n          <Table.Cell width={8}>{serverInstrument.attributes.name}</Table.Cell>\n          <Table.Cell width={3}>{serverInstrument.attributes.symbol}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <Form>\n            <Form.Input width={8} className='icon' icon='search' placeholder='Description' name='searchValue' value={searchValue} onChange={onChange} autoFocus/>\n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <Table compact='very' striped>\n            <Table.Header>{columnTitles()}</Table.Header>\n            <Table.Body>{listInstruments()}</Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nSymbols.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  serverInstruments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchValue: PropTypes.string.isRequired,\n}\n","import React, {Component} from 'react';\nimport {Button, Header, Menu, Modal} from 'semantic-ui-react';\nimport * as Request from '../utils/request';\nimport {Symbols} from '../components/Symbols';\n\nexport default class SymbolsPage extends Component {\n\n  static DISPLAY_ROWS_MAX = 20;\n\n  UNSAFE_componentWillMount() {\n    this.resetComponent();\n  }\n\n  resetComponent = () => {\n    this.setState({\n      modalOpen: false,\n      searchResults: [],\n      searchValue: '',\n    });\n  }\n\n  handleCancel = () => {\n    this.resetComponent();\n  }\n\n  handleChange = (e, {name, value}) => {\n    this.setState({[name]: value});\n    if (e.target.name === 'searchValue') {\n      if (value.length === 0) {\n        this.setState({searchResults: []});\n      } else {\n        Request.instrumentSearch({value: value, exact:false}, instruments => {\n          this.setState({searchResults: instruments.data.slice(0, SymbolsPage.DISPLAY_ROWS_MAX)});\n        });\n      }\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({modalOpen: true});\n  }\n\n  render() {\n    const {modalOpen, searchResults, searchValue} = this.state;\n    return (\n      <Modal\n        closeIcon\n        closeOnDimmerClick={false}\n        size='small'\n        trigger={<Menu.Item onClick={this.handleOpen}>Symbol Lookup</Menu.Item>}\n        open={modalOpen}\n        onClose={this.handleCancel}\n      >\n        <Modal.Header><Header content='Symbol Lookup' icon='search' size='small'/></Modal.Header>\n        <Modal.Content><Symbols searchValue={searchValue} serverInstruments={searchResults} onChange={this.handleChange}/></Modal.Content>\n        <Modal.Actions><Button color='green' onClick={this.handleCancel}>Done</Button></Modal.Actions>\n      </Modal>\n    );\n  }\n}\n","import React, {Component} from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport {connect} from 'react-redux';\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\nimport {Button, Dropdown, Grid, Header, Image, Menu, Table} from 'semantic-ui-react';\nimport ConfirmDialog from './containers/ConfirmDialog';\nimport HeadlinesPage from './containers/HeadlinesPage';\nimport HelpPage from './containers/HelpPage';\n//import LoginPage from './containers/LoginPage';\nimport PortfoliosPage from './containers/PortfoliosPage';\nimport PositionsPage from './containers/PositionsPage';\nimport * as Request from './utils/request';\nimport SettingsEditPage from './containers/SettingsEditPage';\nimport SymbolsPage from './containers/SymbolsPage';\n\nclass App extends Component {\n  menuItemAdmin() {\n    return (\n      <Dropdown item text='Admin'>\n        <Dropdown.Menu>\n          <ConfirmDialog disabled triggerType='dropdown' title='Refresh Instruments...'   header='Background refresh instrument inventory from data feed'         onClickConfirm={Request.instrumentsRefresh}/>\n          <ConfirmDialog disabled triggerType='dropdown' title='Refresh Active Series...' header='Background refresh active series prices'                        onClickConfirm={Request.seriesRefreshActive}/>\n          <ConfirmDialog disabled triggerType='dropdown' title='Refresh All Prices...'    header='Background reprice entire instrument inventory (runs 12 hours)' onClickConfirm={Request.pricesRefresh}/>\n          <ConfirmDialog disabled triggerType='dropdown' title='Refresh All Series...'    header='Background refresh all series prices (runs 2 days)'             onClickConfirm={Request.seriesRefreshAll}/>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  menuItemHelp() {\n    return (\n      <Dropdown item text='Help'>\n        <Dropdown.Menu>\n          <HelpPage trigger={<Dropdown.Item>Usage Notes</Dropdown.Item>}/>\n          <Dropdown.Divider/>\n          <Dropdown.Item disabled as={Link} to='/about'>About</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  pageBody() {\n    return (\n      <Grid.Row columns={2}>\n        <Grid.Column width={11} style={{paddingRight:'5px'}}>\n          <Switch>\n            <Route exact path='/'           component={PortfoliosPage}/>\n            <Route path='/about'            component={PortfoliosPage}/>\n            <Route path='/home'             component={PortfoliosPage}/>\n            <Route exact path='/portfolios' component={PortfoliosPage}/>\n            <Route path='/portfolios/:id'   component={PositionsPage}/>\n          </Switch>\n        </Grid.Column>\n        <Grid.Column width={5} style={{paddingLeft:'5px'}}>\n          <HeadlinesPage/>\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n\n  pageFooter() {\n    return (\n      <Grid.Row columns={1}>\n        <Grid.Column>\n          {this.pageFooterRow()}\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n\n  // <Button content='Refresh' icon='refresh' title='Refresh portfolios' loading={updatingPortfolio} compact inverted size='tiny' style={{paddingRight:'3px', color:'purple'}} onClick={() => refreshPortfolios()}/>\n  pageFooterRow() {\n    return (\n      <Table compact striped style={{marginTop:0}}>\n        <Table.Header>\n          <Table.Row textAlign='center'>\n            <Table.HeaderCell>\n              <span style={{color:'grey', textAlign:'center'}}>\n                            &bull; Historical data by <a href='https://www.alphavantage.co' target='_blank' rel='noopener noreferrer'>Alpha Vantage</a>\n                &emsp;&ensp;&bull; Market data by <a href='https://iexcloud.io' target='_blank' rel='noopener noreferrer'>IEX</a>\n                &emsp;&ensp;&bull; Headline news by <a href='https://newsapi.org' target='_blank' rel='noopener noreferrer'>NewsAPI.org</a>\n                &emsp;&ensp;&bull; DJIA by <a href='https://finance.yahoo.com/' target='_blank' rel='noopener noreferrer'>Yahoo Finance</a>\n                &emsp;&ensp;&bull; The prices shown may not be the correct prices or the latest prices.\n                &emsp;&ensp;&bull; See <HelpPage trigger={<Button content='Help->Usage Notes' className='link' inverted size='medium' style={{paddingLeft:'2px', paddingRight:'1px', color:'#1e70bf'}}/>}/>for more information.\n              </span>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n    );\n  }\n\n  pageHeader() {\n    return (\n      <Grid.Row columns={1}>\n        <Grid.Column stretched>\n          <Image src='/images/logo.jpg'/>\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n\n  pageMenu() {\n    return (\n      <Grid.Row columns={1}>\n        <Grid.Column>\n          <Menu>\n            {this.pageMenuLeft()}\n            {this.pageMenuCenter()}\n            {this.pageMenuRight()}\n          </Menu>\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n\n  pageMenuLeft() {\n    return (\n      <Header className='shadow' color='purple' size='large' style={{lineHeight:0.75, marginRight:0, marginLeft:'1em', marginTop:'.5em', marginBottom:'.5em'}}>\n        Portfolio Analyzer\n      </Header>\n    );\n  }\n\n  pageMenuCenter() {\n    return (\n      <Menu.Menu position='left'>\n        <Menu.Item style={{padding:'.8em'}}></Menu.Item>\n        <Menu.Item as={Link} to='/'>Portfolios</Menu.Item>\n        {<SymbolsPage/>}\n      </Menu.Menu>\n    );\n  }\n\n//        {<LoginPage/>}\n  pageMenuRight() {\n    return (\n      <Menu.Menu position='right'>\n        {this.menuItemAdmin()}\n        {<SettingsEditPage/>}\n        {this.menuItemHelp()}\n      </Menu.Menu>\n    );\n  }\n\n  render() {\n    return (\n      <Router>\n        <Grid padded stackable>\n          {this.pageHeader()}\n          {this.pageMenu()}\n          {this.pageBody()}\n          {this.pageFooter()}\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {state: state}\n}\n\nexport const WrapperApp = connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers}   from 'redux';\nimport {portfolioReducer} from './portfolioReducer';\nimport {userReducer}      from './userReducer';\n\nconst rootReducer = combineReducers({\n  portfolios: portfolioReducer,\n  users: userReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {WrapperApp} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f));\n\nReactDOM.render (\n  <Provider store={store}>\n    <WrapperApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}